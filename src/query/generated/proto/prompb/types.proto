
syntax = "proto3";
package m3prometheus;

option go_package = "prompb";

import "github.com/gogo/protobuf/gogoproto/gogo.proto";

message Sample {
  double value    = 1;
  int64 timestamp = 2;
  Exemplar exemplar = 3;
}

// TimeSeries represents samples and labels for a single time series.
message TimeSeries {
  repeated Label labels   = 1 [(gogoproto.nullable) = false];
  repeated Sample samples = 2 [(gogoproto.nullable) = false];
}

message Label {
  bytes name  = 1;
  bytes value = 2;
}

message Labels {
  repeated Label labels = 1 [(gogoproto.nullable) = false];
}

// Matcher specifies a rule, which can match or set of labels or not.
message LabelMatcher {
  enum Type {
    EQ  = 0;
    NEQ = 1;
    RE  = 2;
    NRE = 3;
  }
  Type type    = 1;
  bytes name  = 2;
  bytes value = 3;
}

message Exemplar {
  repeated Label labels = 1 [(gogoproto.nullable) = false];
  double value = 2;
  int64 timestamp = 3;
} 
